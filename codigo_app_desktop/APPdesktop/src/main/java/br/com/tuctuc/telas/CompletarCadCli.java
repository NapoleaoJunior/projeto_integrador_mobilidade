/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.com.tuctuc.telas;

import br.tuctuc.conexaoBancoDeDados.BD;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Antonio52699596
 */
public class CompletarCadCli extends javax.swing.JInternalFrame {

    private int idCliente;

    /**
     * Creates new form CompletarCadastro
     */
    public CompletarCadCli() {
        initComponents();
    }

    public CompletarCadCli(int idClienteAtualiza) {
        this.idCliente = idClienteAtualiza;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField6 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ACnome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ACsituacao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ACcpf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ACrg = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ACemail = new javax.swing.JTextField();
        ACgenero = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ACdtnasc = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        ACcelular = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        ACusuario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ACsenha = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        AtualizarCadCli = new javax.swing.JToggleButton();
        BTbloquear = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        BTdesbloquear = new javax.swing.JToggleButton();

        jTextField6.setText("jTextField6");

        setTitle("Completar seu Cadastro");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Nome completo");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Situação");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("CPF");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("RG");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("E-mail");

        ACgenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha seu genero", "Masculino", "Feminino", " " }));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Gênero");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Data Nascimento");

        try {
            ACdtnasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Celular");

        try {
            ACcelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Usuário");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Senha");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ACemail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ACnome, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(ACcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(ACrg, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6)
                                .addComponent(jLabel1)
                                .addComponent(ACsituacao)
                                .addComponent(ACgenero, 0, 213, Short.MAX_VALUE))
                            .addComponent(ACdtnasc, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8)
                    .addComponent(ACcelular, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ACsenha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                        .addComponent(ACusuario, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ACnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ACsituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ACcpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ACrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ACdtnasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ACemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ACgenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ACcelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ACusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ACsenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        AtualizarCadCli.setBackground(new java.awt.Color(0, 255, 51));
        AtualizarCadCli.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        AtualizarCadCli.setText("Atualizar Cadastro");
        AtualizarCadCli.setToolTipText("");
        AtualizarCadCli.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        AtualizarCadCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarCadCliActionPerformed(evt);
            }
        });

        BTbloquear.setBackground(new java.awt.Color(255, 153, 51));
        BTbloquear.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        BTbloquear.setText("Bloquear Usuario");
        BTbloquear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        BTbloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTbloquearActionPerformed(evt);
            }
        });

        jToggleButton3.setText("X");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        BTdesbloquear.setBackground(new java.awt.Color(255, 255, 0));
        BTdesbloquear.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        BTdesbloquear.setText("Desbloquear");
        BTdesbloquear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        BTdesbloquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTdesbloquearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AtualizarCadCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BTbloquear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BTdesbloquear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToggleButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                .addComponent(AtualizarCadCli, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BTbloquear, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BTdesbloquear, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void AtualizarCadCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarCadCliActionPerformed
        // Atualizar Cadastro
        // Conectar ao banco de dados
        BD banco = new BD();
        boolean resultado = banco.conectaBD();

        // Variáveis da tela de cadastro
        String generoCl = (String) this.ACgenero.getSelectedItem();

        // String para Atualizar os dados
        String query = "UPDATE cliente SET nome_completo = ?, cpf = ?, rg = ?, email = ?, data_nascimento = ?, genero = ?, situacao = ?, celular = ? WHERE id_cliente = " + idCliente;
        PreparedStatement ps = banco.getPreparedStatement(query);
        try {
            // Verificações para cada campo
            ps.setString(1, ACnome.getText().isEmpty() ? null : ACnome.getText());
            ps.setString(2, ACcpf.getText().isEmpty() ? null : ACcpf.getText());
            ps.setString(3, ACrg.getText().isEmpty() ? null : ACrg.getText());
            ps.setString(4, ACemail.getText().isEmpty() ? null : ACemail.getText());

            // Para a data, devemos verificar se o campo está vazio
            String dataNasc = ACdtnasc.getText();
            if (dataNasc.isEmpty() || dataNasc.equals("  /  /    ")) {
                ps.setNull(5, java.sql.Types.DATE);
            } else {
                ps.setDate(5, new java.sql.Date(new SimpleDateFormat("dd/MM/yyyy").parse(dataNasc).getTime()));
            }

            ps.setString(6, generoCl);
            ps.setString(7, ACsituacao.getText().isEmpty() ? null : ACsituacao.getText());
            ps.setString(8, ACcelular.getText().isEmpty() ? null : ACcelular.getText());

            ps.execute();

            JOptionPane.showMessageDialog(this, "Cadastro Atualizado");
        } catch (SQLException | ParseException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar no Banco de dados. Erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_AtualizarCadCliActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // Carregar os dados do Cliente Selecionado
        BD banco = new BD();
        boolean resultado = banco.conectaBD();
        if (resultado) {
            // Prepara a consulta com base no ID do cliente
            String query = "SELECT nome_usuario, cpf, celular, email, situacao FROM cliente WHERE id_cliente = ?";
            PreparedStatement ps = banco.getPreparedStatement(query);
            try {
                // Define o parâmetro da consulta
                ps.setInt(1, idCliente);
                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    this.ACusuario.setText(rs.getString("nome_usuario"));
                    this.ACcpf.setText(rs.getString("cpf"));
                    this.ACcelular.setText(rs.getString("celular"));
                    this.ACemail.setText(rs.getString("email"));
                    this.ACsituacao.setText(rs.getString("situacao"));
                }

                rs.close();
                ps.close();
                banco.encerrarConexao();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,
                        "Não foi possível realizar a consulta no BD. Erro: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Erro ao conectar com o banco de dados.");
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void BTbloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTbloquearActionPerformed
// Conectar ao banco de dados
        BD banco = new BD();
        boolean resultado = banco.conectaBD();

        // String para Atualizar os dados
        try {
            // Realizar o update
            String query = "UPDATE cliente SET situacao = 'Bloqueado' WHERE id_cliente = " + idCliente;
            PreparedStatement ps = banco.getPreparedStatement(query);
            ps.execute();
            ps.close();

            query = "SELECT nome_completo, cpf, rg, email, data_nascimento, genero, nome_usuario, situacao, celular FROM cliente WHERE id_cliente = " + idCliente;
            ps = banco.getPreparedStatement(query);
            // Define o parâmetro da consulta
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                this.ACnome.setText(rs.getString("nome_completo"));
                this.ACcpf.setText(rs.getString("cpf"));
                this.ACrg.setText(rs.getString("rg"));
                this.ACemail.setText(rs.getString("email"));

                // Recupera e formata a data de nascimento
                java.sql.Date dataNascimento = rs.getDate("data_nascimento");
                if (dataNascimento != null) {
                    // Formata a data para String, se necessário
                    SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                    this.ACdtnasc.setText(formato.format(dataNascimento));
                } else {
                    this.ACdtnasc.setText(""); // Caso a data seja nula
                }

                this.ACgenero.setSelectedItem(rs.getString("genero"));
                this.ACusuario.setText(rs.getString("nome_usuario"));
                this.ACsituacao.setText(rs.getString("situacao"));
                this.ACcelular.setText(rs.getString("celular"));
            }

            rs.close();
            ps.close();
            banco.encerrarConexao();

            JOptionPane.showMessageDialog(this, "Usuário Bloqueado");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao conectar com Banco de dados: " + ex.getMessage());
        }
    }//GEN-LAST:event_BTbloquearActionPerformed

    private void BTdesbloquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTdesbloquearActionPerformed
        // Conectar ao banco de dados
        BD banco = new BD();
        boolean resultado = banco.conectaBD();

        try {
            //String para Atualizar os dados
            String query = "UPDATE cliente SET situacao = 'Ativo' WHERE id_cliente = " + idCliente;
            PreparedStatement ps = banco.getPreparedStatement(query);
            ps.execute();
            ps.close();

            query = "SELECT nome_completo, cpf, rg, email, data_nascimento, genero, nome_usuario, situacao, celular  FROM cliente WHERE id_cliente = " + idCliente;
            ps = banco.getPreparedStatement(query);
            // Define o parâmetro da consulta
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                this.ACnome.setText(rs.getString("nome_completo"));
                this.ACcpf.setText(rs.getString("cpf"));
                this.ACrg.setText(rs.getString("rg"));
                this.ACemail.setText(rs.getString("email"));
                this.ACdtnasc.setText(rs.getString("data_nascimento"));
                this.ACgenero.setSelectedItem((rs.getString("genero")));
                this.ACusuario.setText(rs.getString("nome_usuario"));
                this.ACsituacao.setText(rs.getString("situacao"));
                this.ACcelular.setText(rs.getString("celular"));
            }

            rs.close();
            ps.close();
            banco.encerrarConexao();

            JOptionPane.showMessageDialog(this, "Usuário Desbloqueado");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao conectar com Banco de dados" + ex.getMessage());
        }
    }//GEN-LAST:event_BTdesbloquearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField ACcelular;
    private javax.swing.JTextField ACcpf;
    private javax.swing.JFormattedTextField ACdtnasc;
    private javax.swing.JTextField ACemail;
    private javax.swing.JComboBox<String> ACgenero;
    private javax.swing.JTextField ACnome;
    private javax.swing.JTextField ACrg;
    private javax.swing.JTextField ACsenha;
    private javax.swing.JTextField ACsituacao;
    private javax.swing.JTextField ACusuario;
    private javax.swing.JToggleButton AtualizarCadCli;
    private javax.swing.JToggleButton BTbloquear;
    private javax.swing.JToggleButton BTdesbloquear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JToggleButton jToggleButton3;
    // End of variables declaration//GEN-END:variables
}
